name: Build & Test

on:
  workflow_dispatch:
  push:
    branches:
    - master
    - 'feature/**'
    - 'release/**'
#  pull_request:
#    branches: [ master ]

env:
  configuration: Release
  artifacts-dir: artifacts
  nugets-dir:    artifacts/nupkgs
  pdb-dir:       artifacts/pdb
  pdb-src:       src/Armature/bin/Release/netstandard2.0/*.pdb

jobs:
  build:
    runs-on: windows-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0

    -
      name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.11
      with:
        versionSpec: '5.x'

    -
      name: Use GitVersion
      id:   gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.11

    -
      name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version:     6.0.x
        include-prerelease: true

    # Restore build and test as one command in order to not copy/paste the same arguments
#    -
#      name: Restore, build, and run tests
#      run:  >
#            dotnet test
#            -c ${{env.configuration}}
#            -p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }}
#            -p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }}
#            -p:InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }}

    # Restore build and pack as one command in order to not copy/paste the same arguments
    # Place nuget packages into env.nugets-dir directory
    -
      name: Pack
      run:  >
            dotnet pack
            -c ${{ env.configuration }}
            -p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }}
            -p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }}
            -p:InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }}
            -o:${{ env.nugets-dir }}
            -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }}

    -
      name: Store Version
      uses: jsdaniell/create-json@1.1.2
      with:
        name: version.json
        json: |
              {
              "assembly-version": "${{ steps.gitversion.outputs.assemblySemVer }}",
              "assembly-file-version": "${{ steps.gitversion.outputs.assemblySemFileVer }}",
              "nuget-version": "${{ steps.gitversion.outputs.nuGetVersionV2 }}"
              }
        dir:  ${{ env.artifacts-dir }}

    -
      name: Store PDB
      run: xcopy ${{ env.pdb-src }} ${{ env.pdb-dir }}/ /s /i /y

    -
      name: Upload Artifacts
      uses: actions/upload-artifact@v2.2.2
      with:
        name:           Artifacts
        path:           ${{ env.artifacts-dir }}/
        retention-days: 3
src\Armature\bin\Release\netstandard2:
  0\: