should_inject_parameter_value_from_narrower_context_not_from_longer_matching_path

// longer path
target.Treat<ISubject1>().AsCreated<LevelThree>();
target.Building<ISubject1>().Building<LevelThree>().TreatAll().UsingArguments("string3")); // longer path

// narrower context
target.Treat<LevelTwo>().AsIs();
target.Building<LevelTwo>().TreatAll().UsingArguments("string2"));

target.Treat<LevelOne>().AsIs();

ISubject -> LevelThree -> LevelTwo -> LevelOne -> string
// longer path
 ++             ++            -          -          =
// narrower context
  0            0             ++          -          =
// narrower context  2
  +            +             ++          -          =
- should be bigger then any amount of +s


target.Treat<ISubject>().As<Subject>().UsingArguments("long");
target.Treat<Subject>().AsIs.UsingArguments("short");

ISubject -> Subject -> string
// long
  +           +          =
// short
  0           +          =



ISubject1 -> LevelThree -> string3

LevelTwo -> string2


ISubject1 -> Subject -> stringLong
Subject -> stringNarrow


ISubject -> LevelThree -> LevelTwo -> string

How can string2 "recognize" that it's more suitable for LevelTwo then string3?
1. It's placed deeper
2. It's placed under LevelTwo

How to express it in terms of Armature?

target.Treat<ISubject1>().AsCreated<LevelThree>()

SkipTill(ISubject1)[RedirectTo]                              = 0
 IfFirst(LevelThree)[CreateByReflection]                     = +5
   SkipAll                                                   = -10
     IfFirst(IsBaseTypeOf(string))[Instance(string3)]        = +5



SkipTill(LevelTwo)(CreateByReflections)                      = 0
   SkipAll                                                   = -10
     IfFirst(IsBaseTypeOf(string))[Instance(string2)]        = +5

There are:
* Length of the building sequence (BSL)
* Length of the pattern tree branch (PTL)

BSL is handled by SkipAll PT node, it decreases the weight on each skipped unit in the BS
Why it doesn't work in this case? Because it skipped one unit more and it's not enough to "win" more IfFirstUnit PT node


PTL for now is not handled